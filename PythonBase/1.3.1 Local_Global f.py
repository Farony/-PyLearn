# Глобальные переменные (объявляем раньше чем используем)
a = 8           # создали раньше, чем ее использовали


def f():
    b = 3
    print(a)    # читаем глобальную переменную а (не изменяя ее значения)
    print(b)


def f2():  # создаем локальную переменную
    a = 3
    print(a)


def f3():  # Вызов глобальной переменной
    global a  # вызываем и работаем с глобальной переменной
    a = 1
    print(a, end=' ')  # позволяет не переносить строку


def factorial(n):  # рекурсивный вызов процедуры
    if n == 0:
        return 1
    return n * factorial(n-1)


f()
print(a)

b = 4
f()
f2()
f3()
print(a)

# рекурсивный вызов процедуры
print(factorial(6))

# области видимости
X = 99  # глобальная переменная
Y = 33


def f4():
    X = 88          # Локальное имя в объемлющей функции
    Y = 55
    Z = 99

    def f5():
        Y = 22
        Z = 11
        print(X, Y, Z)    # Обращение к переменной во вложенной функции

    f5()
    print(X, Y, Z)


print(X, Y)
f4()                # Выведет 88: локальная переменная в объемлющей функции
# f5()                # Ошибка! функция f5 здесь не видна!


def func(Y):    # Y и Z определены в функции: локальная область
    # Локальная область видимости
    Z = X + Y   # X – глобальная переменная
    return Z


print(func(1))         # func в модуле: вернет число 100
